# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build_and_test

on:
  - push
  - pull_request

env:
  TWILIO_APP_NAME: onebusaway-twilio-webapp
  TWILIO_IMAGE_NAME: nautilustechnologyau/transit/onebusaway-twilio-webapp
  SERVER_PORT: 8080
  LOCATION: 'Australia East'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          server-id: github
          tings-path: ${{ github.WORKSPACE }}
          distribution: temurin
          cache: maven

      - name: Build with Maven
        run: mvn package -Ptravis -Dmaven.javadoc.skip=true -Dvalidate.silent=true -Dlog4j.configuration= -B -V -q

      - name: Set environment variables
        run: |
          echo "GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Set Image Tag
        run: |
          echo "IMAGE_TAG=${{ env.PROJECT_VERSION }}" >> $GITHUB_ENV
#          if [[ "${{ env.GIT_BRANCH }}" == "main" ]]; then
#            echo "IMAGE_TAG=${{ env.PROJECT_VERSION }}" >> $GITHUB_ENV
#          fi
          
#          if [[ "${{ env.GIT_BRANCH }}" != "main" ]]; then
#            echo "IMAGE_TAG=${{ env.PROJECT_VERSION }}-${{ env.GIT_BRANCH }}" >> $GITHUB_ENV
#          fi
      - id: set_image_tag
        run: |
          echo "::set-output name=image_tag::${{ env.IMAGE_TAG }}"
          echo "::set-output name=project_version::${{ env.PROJECT_VERSION }}"

      - name: Azure Login
#        if: github.event_name != 'pull_request'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login [Azure]
#        if: github.event_name != 'pull_request'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker Build - onebusaway-twilio-webapp
#        if: github.event_name != 'pull_request'
        run: |
          docker build --build-arg VERSION=${{ env.IMAGE_TAG }} -t ${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./onebusaway-twilio-webapp

      - name: Docker Tag - onebusaway-twilio-webapp
        if: github.event_name != 'pull_request'
#        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Docker Push - onebusaway-twilio-webapp
        if: github.event_name != 'pull_request'
#        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Configure Git user
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Release
        if: github.ref == 'refs/heads/master'
        uses: qcastel/github-actions-maven-release@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip"
          git-release-bot-name: "$(git --no-pager log --format=format:'%an' -n 1)"
          git-release-bot-email: "$(git --no-pager log --format=format:'%ae' -n 1)"

  deploy_to_azure:
    if: github.event_name != 'pull_request'
#    if: github.ref == 'refs/heads/main'
    needs: build_and_test

    runs-on: ubuntu-latest

    steps:
      - name: Set Environment Variables
        run: |
          echo "IMAGE_TAG=${{ needs.build_and_test.outputs.image_tag }}" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Twilio Webapp to Azure Containers Service
        uses: azure/aci-deploy@v1.1.3
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ env.TWILIO_APP_NAME }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: ${{ env.TWILIO_APP_NAME }}
          ports: ${{ env.SERVER_PORT }}
          environment-variables: SERVER_PORT=${{ env.SERVER_PORT }} \
          AZURE_COGNITIVE_SERVICE_URL=${{ secrets.AZURE_COGNITIVE_SERVICE_URL }} \
          TRANSIT_DATA_SERVICE_URL=${{ secrets.TRANSIT_DATA_SERVICE_URL }} \
          DATABASE_HOST=${{ secrets.TRANSIT_DATABASE_HOST }} \
          DATABASE_PORT=${{ secrets.TRANSIT_DATABASE_PORT }} \
          DATABASE_NAME=${{ secrets.TRANSIT_DATABASE_NAME }} \
          DATABASE_USER=${{ secrets.TRANSIT_DATABASE_USER }} \
          DATABASE_PASSWORD=${{ secrets.TRANSIT_DATABASE_PASSWORD }}
          location: ${{ env.LOCATION }}
          cpu: 1
          memory: 2

#      - name: Deploy to Production
#        uses: azure/CLI@v1
#        with:
#          inlineScript: |
#            az config set extension.use_dynamic_install=yes_without_prompt
#            az containerapp registry set -n ${{ env.TWILIO_APP_NAME }} -g ${{ secrets.RESOURCE_GROUP }} --server ${{ secrets.REGISTRY_LOGIN_SERVER }} --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
#            az containerapp update -n ${{ env.TWILIO_APP_NAME }} -g ${{ secrets.RESOURCE_GROUP }} --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.TWILIO_IMAGE_NAME }}:${{ env.IMAGE_TAG }} --set-env-vars "SERVER_PORT=${{ env.SERVER_PORT }}" "AZURE_SPEECH_SERVICE_KEY=${{ secrets.AZURE_SPEECH_SERVICE_KEY }}" "AZURE_SPEECH_SERVICE_REGION=${{ secrets.AZURE_SPEECH_SERVICE_REGION }}"

